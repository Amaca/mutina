{"version":3,"names":[],"mappings":"","sources":["src/app/app.js"],"sourcesContent":["/* jshint esversion: 6 */\r\n/* global window, document, Swiper, TweenMax, TimelineMax */\r\n\r\nimport \"@babel/polyfill\";\r\nimport barba from '@barba/core';\r\nimport \"css-vars-ponyfill\";\r\nimport Anchors from './shared/anchors';\r\nimport Appears from './shared/appears';\r\nimport Dom from './shared/dom';\r\nimport Fancy from \"./shared/fancy\";\r\nimport FancyViewAll from \"./shared/fancy.view-all\";\r\nimport Filters from './shared/filters';\r\nimport LazyLoad from './shared/lazyload';\r\nimport Navigation from \"./shared/navigation\";\r\nimport Rect from './shared/rect';\r\nimport Samples from \"./shared/samples\";\r\nimport Sliders from './shared/sliders';\r\nimport Utils from './shared/utils';\r\n\r\n//settings\r\nlet menuStyle = 1;\r\nlet scrollSpeed = 8;\r\nconst activateIntro = false;\r\nconst barbaDebug = true;\r\nconst disableBarba = false;\r\n\r\nexport default class App {\r\n\r\n    constructor() {}\r\n\r\n    init() {\r\n        const body = document.querySelector('body');\r\n        const page = document.querySelector('.page');\r\n        const header = document.querySelector('.header');\r\n        const smooth = 'cubic-bezier(0, 0.97, 0.43, 1)';\r\n\r\n        Dom.detect(body);\r\n        const mouse = {\r\n            x: 0,\r\n            y: 0\r\n        };\r\n        this.body = body;\r\n        this.page = page;\r\n        this.header = header;\r\n        this.smooth = smooth;\r\n        this.appears = [];\r\n        this.parallaxes = [];\r\n        this.onResize();\r\n        this.addListeners();\r\n        this.transitions();\r\n\r\n        Element.prototype.scrollIntoView_ = Element.prototype.scrollIntoView;\r\n        Element.prototype.scrollIntoView = function () {\r\n            if (Dom.fastscroll) {\r\n                return this.scrollIntoView_.apply(this, arguments);\r\n            } else {\r\n                let rect = Rect.fromNode(this);\r\n                const scrollTop = Dom.scrollTop();\r\n                window.scrollTo(0, Math.max(0, scrollTop + rect.top - 120));\r\n            }\r\n        };\r\n        Navigation.init();\r\n        body.classList.add('ready');\r\n    }\r\n\r\n    transitions() {\r\n        const transitionLayer = document.querySelector('.transition');\r\n        const textFront = document.querySelector('.transition__text .box--front .text');\r\n        const textBack = document.querySelector('.transition__text .box--back .text');\r\n        const boxBack = document.querySelector('.transition__text .box--back');\r\n        const line = document.querySelector('.transition__line');\r\n\r\n        if (!disableBarba) {\r\n            barba.init({\r\n                timeout: 5000,\r\n                debug: barbaDebug,\r\n                transitions: [{\r\n                        name: 'default',\r\n                        appear(data) {\r\n                            const done = this.async();\r\n                            const transitionLayer = document.querySelector('.transition');\r\n                            const logoWrapper = document.querySelector('.transition .logo__wrapper');\r\n                            if (activateIntro) {\r\n                                let tl = new TimelineMax();\r\n                                const speed = 0.5;\r\n                                const transform = -10;\r\n                                tl.timeScale(0.9);\r\n\r\n                                const logo = [{\r\n                                        name: 'charM',\r\n                                        selector: document.querySelector('.logo__char-m'),\r\n                                        move: transform,\r\n                                        width: null,\r\n                                    },\r\n                                    {\r\n                                        name: 'charU',\r\n                                        selector: document.querySelector('.logo__char-u'),\r\n                                        move: transform,\r\n                                        width: null,\r\n                                    },\r\n                                    {\r\n                                        name: 'squarePrimary',\r\n                                        selector: document.querySelector('.logo__square-primary'),\r\n                                        width: document.querySelector('.logo__square-primary').width.baseVal.value,\r\n                                    },\r\n                                    {\r\n                                        name: 'charT',\r\n                                        selector: document.querySelector('.logo__char-t'),\r\n                                        move: transform,\r\n                                        width: null,\r\n                                    },\r\n                                    {\r\n                                        name: 'charI',\r\n                                        selector: document.querySelector('.logo__char-i'),\r\n                                        move: transform,\r\n                                        width: null,\r\n                                    },\r\n                                    {\r\n                                        name: 'squareSecondary',\r\n                                        selector: document.querySelector('.logo__square-secondary'),\r\n                                        move: transform,\r\n                                        width: document.querySelector('.logo__square-secondary').width.baseVal.value,\r\n                                    },\r\n                                    {\r\n                                        name: 'charN',\r\n                                        selector: document.querySelector('.logo__char-n'),\r\n                                        move: transform,\r\n                                        width: null,\r\n                                    },\r\n                                    {\r\n                                        name: 'groupA',\r\n                                        selector: document.querySelector('.logo__group-a'),\r\n                                        move: transform,\r\n                                        width: null,\r\n                                    }\r\n                                ];\r\n\r\n                                tl.set(transitionLayer, {\r\n                                    height: window.innerHeight + 2,\r\n                                });\r\n\r\n                                logo.forEach(item => {\r\n                                    if (item.name === 'squarePrimary' || item.name === 'squareSecondary') {\r\n                                        tl.set(item.selector, {\r\n                                            width: 0,\r\n                                            transform: 'translateX(' + item.move + 'px)',\r\n                                            opacity: 1\r\n                                        });\r\n                                    } else {\r\n                                        tl.set(item.selector, {\r\n                                            transform: 'translateX(' + item.move + 'px)',\r\n                                            opacity: 0\r\n                                        });\r\n                                    }\r\n                                });\r\n\r\n                                logo.forEach((item, index) => {\r\n                                    let delay = '-=0.4';\r\n                                    if (item.name === 'squarePrimary' || item.name === 'squareSecondary') {\r\n                                        tl.to(item.selector, speed, {\r\n                                            width: item.width,\r\n                                            transform: 'translateX(0px)',\r\n                                            opacity: 1,\r\n                                            ease: Expo.easeInOut\r\n                                        }, delay);\r\n                                    } else {\r\n                                        tl.to(item.selector, speed, {\r\n                                            transform: 'translateX(0px)',\r\n                                            opacity: 1,\r\n                                            ease: Expo.easeInOut,\r\n                                            onComplete: () => {\r\n                                                if (index === logo.length - 1) {\r\n                                                    console.log('pageinit');\r\n                                                    app.onPageInit();\r\n                                                }\r\n                                            }\r\n                                        }, delay);\r\n                                    }\r\n                                });\r\n\r\n                                tl.to(logoWrapper, 0.8, {\r\n                                    height: 0,\r\n                                    ease: Expo.easeInOut,\r\n                                }, '+=0.5');\r\n\r\n                                tl.to(transitionLayer, 1, {\r\n                                    height: 2,\r\n                                    top: app.header.clientHeight - 2,\r\n                                    bottom: 'auto',\r\n                                    ease: Expo.easeInOut,\r\n                                    onComplete: function () {\r\n                                        transitionLayer.style.height = 0;\r\n                                        transitionLayer.classList.add('transition--no-top-line');\r\n                                        done();\r\n                                    }\r\n                                }, '-=0.6');\r\n                            } else {\r\n                                app.onPageInit();\r\n                                TweenMax.set(transitionLayer, {\r\n                                    height: 0,\r\n                                    top: 0,\r\n                                    bottom: 'auto',\r\n                                });\r\n                                transitionLayer.classList.add('transition--no-top-line');\r\n                                done();\r\n                            }\r\n                        },\r\n                        /////////////////////////////////////////////\r\n                        leave(data) {\r\n                            const done = this.async();\r\n                            const title = data.trigger !== 'popstate' ? data.trigger.getAttribute('data-transition') : 'Mutina';\r\n\r\n                            textFront.innerHTML = '';\r\n                            textBack.innerHTML = '';\r\n                            textFront.innerHTML = title;\r\n                            textBack.innerHTML = title;\r\n                            Navigation.closeNav();\r\n                            Navigation.closeSearch();\r\n                            TweenMax.set(transitionLayer, {\r\n                                backgroundColor: '#CFCFCF',\r\n                                width: window.innerWidth,\r\n                                bottom: 0,\r\n                                opacity: 1,\r\n                                top: 'auto',\r\n                                height: 0,\r\n                            });\r\n                            TweenMax.set(textFront, {\r\n                                transform: 'translateY(100%)',\r\n                                opacity: 1\r\n                            });\r\n                            TweenMax.set(textBack, {\r\n                                transform: 'translateY(0)',\r\n                            });\r\n                            TweenMax.set(boxBack, {\r\n                                width: 0,\r\n                            });\r\n                            TweenMax.set(line, {\r\n                                width: 0,\r\n                            });\r\n                            TweenMax.to(data.current.container, 1, {\r\n                                transform: 'translateY(-60px)',\r\n                                ease: Expo.easeInOut\r\n                            }).delay(0.3);\r\n                            TweenMax.to(transitionLayer, 1, {\r\n                                height: window.innerHeight,\r\n                                ease: Expo.easeInOut\r\n                            }).delay(0.3);\r\n                            TweenMax.to(textFront, 1, {\r\n                                transform: 'translateY(0)',\r\n                                ease: Expo.easeInOut,\r\n                            }).delay(0.4);\r\n                            TweenMax.to(line, 1, {\r\n                                width: '100%',\r\n                                ease: Expo.easeInOut,\r\n                            }).delay(1.2);\r\n                            TweenMax.to(boxBack, 1, {\r\n                                width: '100%',\r\n                                ease: Expo.easeInOut,\r\n                                onComplete: (e) => {\r\n                                    done();\r\n                                }\r\n                            }).delay(1.2);\r\n                        },\r\n                        afterLeave(data) {\r\n                            const done = this.async();\r\n                            app.destroyAll(data.current.container);\r\n                            done();\r\n                        },\r\n                        beforeEnter(data) {\r\n                            const done = this.async();\r\n                            app.onPageInit();\r\n                            /*\r\n                            window.daraLayer.push({\r\n\r\n                            })\r\n                            gtm.push({\r\n                                title: document.title,\r\n                                href: window.href\r\n                            })\r\n                            */\r\n                            done();\r\n                        },\r\n                        enter(data) {\r\n                            const done = this.async();\r\n                            window.scrollTo(0, 0);\r\n                            TweenMax.to(textBack, 1, {\r\n                                transform: 'translateY(-100%)',\r\n                                ease: Expo.easeInOut,\r\n                            }).delay(0.1);\r\n                            TweenMax.to(textFront, 1, {\r\n                                transform: 'translateY(-100%)',\r\n                                ease: Expo.easeInOut,\r\n                            }).delay(0.1);\r\n                            TweenMax.to(transitionLayer, 1, {\r\n                                height: 0,\r\n                                top: 0,\r\n                                bottom: 'auto',\r\n                                ease: Expo.easeInOut,\r\n                                onComplete: (e) => {\r\n                                    done();\r\n                                }\r\n                            }).delay(0.3);\r\n                        },\r\n                        ////////////////////////////////////////////////////\r\n                    },\r\n                    {\r\n                        name: 'fast-transition',\r\n                        from: {\r\n                            custom: ({\r\n                                trigger\r\n                            }) => {\r\n                                return trigger.classList && trigger.classList.contains('fast-transition');\r\n                            },\r\n                        },\r\n                        leave(data) {\r\n                            const done = this.async();\r\n                            console.log('fadeOut');\r\n                            done();\r\n                        },\r\n                        afterLeave(data) {\r\n                            const done = this.async();\r\n                            app.destroyAll(data.current.container);\r\n                            done();\r\n                        },\r\n                        beforeEnter(data) {\r\n                            const done = this.async();\r\n                            app.onPageInit();\r\n                            done();\r\n                        },\r\n                        enter(data) {\r\n                            const done = this.async();\r\n                            console.log('fadeIn');\r\n                            done();\r\n                        },\r\n                    },\r\n                    {\r\n                        name: 'fancy-transition',\r\n                        from: {\r\n                            custom: ({\r\n                                trigger\r\n                            }) => {\r\n                                return trigger.classList && trigger.classList.contains('fancy-transition');\r\n                            },\r\n                        },\r\n                        leave(data) {\r\n                            const done = this.async();\r\n                            Navigation.closeNav();\r\n                            Navigation.closeSearch();\r\n                            TweenMax.set(line, {\r\n                                width: 0,\r\n                            });\r\n                            TweenMax.set(transitionLayer, {\r\n                                backgroundColor: '#CFCFCF',\r\n                                width: window.innerWidth,\r\n                                bottom: 0,\r\n                                opacity: 1,\r\n                                top: 'auto',\r\n                                height: 0,\r\n                            });\r\n                            TweenMax.to(data.current.container, 1, {\r\n                                transform: 'translateY(-60px)',\r\n                                ease: Expo.easeInOut\r\n                            }).delay(0.3);\r\n                            TweenMax.to(transitionLayer, 1, {\r\n                                height: window.innerHeight,\r\n                                ease: Expo.easeInOut,\r\n                                onComplete: (e) => {\r\n                                    done();\r\n                                }\r\n                            }).delay(0.3);\r\n                        },\r\n                        afterLeave(data) {\r\n                            const done = this.async();\r\n                            app.destroyAll(data.current.container);\r\n                            done();\r\n                        },\r\n                        beforeEnter(data) {\r\n                            const done = this.async();\r\n                            app.onPageInit();\r\n                            done();\r\n                        },\r\n                        enter(data) {\r\n                            const done = this.async();\r\n                            window.scrollTo(0, 0);\r\n                            TweenMax.to(transitionLayer, 1, {\r\n                                width: 422,\r\n                                top: 0,\r\n                                bottom: 'auto',\r\n                                backgroundColor: '#121212',\r\n                                ease: Expo.easeInOut,\r\n                            });\r\n                            TweenMax.to(transitionLayer, 1, {\r\n                                opacity: 0,\r\n                                ease: Expo.easeInOut,\r\n                                onComplete: (e) => {\r\n                                    done();\r\n                                }\r\n                            }).delay(0.3);\r\n                        },\r\n                    }\r\n                ],\r\n            });\r\n        } else {\r\n            const transition = document.querySelector('.transition');\r\n            transition.remove();\r\n            this.onPageInit();\r\n        }\r\n    }\r\n\r\n    setFancySidebar() {\r\n        if (document.querySelector('.fancy-detail')) {\r\n            const sidebar = document.querySelector('.fancy-detail__sidebar');\r\n            const sidebarClone = sidebar.cloneNode(true);\r\n            this.body.classList.add('fancy-page');\r\n            this.body.appendChild(sidebarClone);\r\n            sidebar.remove();\r\n        } else if (document.querySelector('.fancy-detail__sidebar')) {\r\n            const sidebar = document.querySelector('.fancy-detail__sidebar');\r\n            this.body.classList.remove('fancy-page');\r\n            sidebar.remove();\r\n        }\r\n    }\r\n\r\n    onPageInit() {\r\n        this.parallaxes = [].slice.call(document.querySelectorAll('[data-parallax]'));\r\n        LazyLoad.init();\r\n        Sliders.init();\r\n        Anchors.init(document.querySelector('.anchors__wrapper'), 200);\r\n        Fancy.init();\r\n        FancyViewAll.init();\r\n        Samples.init();\r\n        Utils.toggleGrid();\r\n        Filters.init();\r\n        this.setFancySidebar();\r\n\r\n        setTimeout(x => {\r\n            this.appears = Appears.init();\r\n            if (window.innerWidth > 768) {\r\n                Splitting();\r\n            }\r\n        }, 600);\r\n    }\r\n\r\n    destroyAll(container) {\r\n        Anchors.destroyAll();\r\n        Sliders.destroyAll();\r\n        Fancy.destroyAll();\r\n        Samples.destroyAll();\r\n        FancyViewAll.destroyAll();\r\n        Filters.destroyAll();\r\n        container.remove();\r\n    }\r\n\r\n    addListeners() {\r\n        window.addEventListener('resize', () => {\r\n            this.onResize();\r\n        });\r\n\r\n        window.addEventListener('scroll', Utils.throttle(() => {\r\n            this.onScroll();\r\n        }, 1000 / 25));\r\n\r\n        window.addEventListener('wheel', (e) => {\r\n            this.onWheel(e);\r\n        });\r\n    }\r\n\r\n    onMouseMove(e) {\r\n\r\n    }\r\n\r\n    onResize() {\r\n        this.windowRect = new Rect({\r\n            top: 0,\r\n            left: 0,\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n        });\r\n        Navigation.closeNav();\r\n        Navigation.closeSearch();\r\n    }\r\n\r\n    onScroll(e) {\r\n        const scrollTop = Dom.scrollTop();\r\n        const anchorPanel = document.querySelector('.anchors');\r\n        const filterPanel = document.querySelector('.filters');\r\n\r\n        Navigation.closeNav();\r\n        Navigation.closeSearch();\r\n\r\n        // fastscroll mobile\r\n        if (Dom.fastscroll) {\r\n            const newTop = Math.round(scrollTop * 10) / 5;\r\n            if (this.page.previousTop !== newTop) {\r\n                this.page.previousTop = newTop;\r\n                Dom.scrolling = true;\r\n                if (newTop > this.page.previousTop) {\r\n                    this.body.classList.add('scroll-up');\r\n                    this.body.classList.remove('scroll-down');\r\n                } else {\r\n                    this.body.classList.remove('scroll-up');\r\n                    this.body.classList.add('scroll-down');\r\n                }\r\n            } else {\r\n                Dom.scrolling = false;\r\n            }\r\n        }\r\n\r\n        //header animation\r\n        if (this.header && scrollTop > 300 && !this.body.classList.contains('nav-mobile-open')) {\r\n            this.header.style.top = -this.header.clientHeight + 'px';\r\n            this.header.style.transition = 'top .15s linear';\r\n\r\n            if (anchorPanel) {\r\n                anchorPanel.style.top = -anchorPanel.clientHeight + 'px';\r\n                anchorPanel.style.transition = 'top .15s linear';\r\n            }\r\n\r\n            if (this.body.classList.contains('scroll-down')) {\r\n                this.header.style.top = 0;\r\n                if (anchorPanel) {\r\n                    anchorPanel.style.top = -anchorPanel.clientHeight + 'px';\r\n                }\r\n            } else {\r\n                this.header.style.top = -this.header.clientHeight + 'px';\r\n                if (anchorPanel) {\r\n                    anchorPanel.style.top = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onWheel(e) {\r\n        if (e.deltaY > 0) {\r\n            this.body.classList.add('scroll-up');\r\n            this.body.classList.remove('scroll-down');\r\n        } else {\r\n            this.body.classList.remove('scroll-up');\r\n            this.body.classList.add('scroll-down');\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        // smoothscroll desktop\r\n        // if (!Dom.overscroll && !Dom.touch) {\r\n        if (!Dom.fastscroll) {\r\n            if (this.body.offsetHeight !== this.page.offsetHeight) {\r\n                this.body.setAttribute('style', `height: ${this.page.offsetHeight}px;`);\r\n                /*\r\n                TweenMax.set(this.body, {\r\n                \theight: this.page.offsetHeight,\r\n                });\r\n                */\r\n            }\r\n            const scrollTop = Dom.scrollTop();\r\n            let newTop = this.page.previousTop || 0;\r\n            newTop += (scrollTop - newTop) / scrollSpeed;\r\n            if (Math.abs(scrollTop - newTop) < 0.15) {\r\n                newTop = scrollTop;\r\n            }\r\n            if (newTop !== undefined && !Number.isNaN(newTop) && this.page.previousTop !== newTop) {\r\n                this.page.previousTop = newTop;\r\n                // this.page.setAttribute('style', `top: ${-newTop}px;`);\r\n                this.page.setAttribute('style', `transform: translateY(${-newTop}px);`);\r\n                /*\r\n                TweenMax.set(this.page, {\r\n                \ty: -newTop,\r\n                });\r\n                */\r\n                Dom.scrolling = true;\r\n            } else {\r\n                Dom.scrolling = false;\r\n            }\r\n        } else if (this.body.hasAttribute('style')) {\r\n            this.body.removeAttribute('style');\r\n            this.page.removeAttribute('style');\r\n        }\r\n\r\n        //parallax\r\n        this.parallaxes.forEach((node, i) => {\r\n            const parallax = node.parallax || (node.parallax = parseInt(node.getAttribute('data-parallax')) || 5) * 3;\r\n            const direction = i % 2 === 0 ? 1 : -1;\r\n            let currentY = node.currentY || 0;\r\n            let rect = Rect.fromNode(node);\r\n            rect = new Rect({\r\n                top: rect.top,\r\n                left: rect.left,\r\n                width: rect.width,\r\n                height: rect.height,\r\n            });\r\n            const intersection = rect.intersection(this.windowRect);\r\n            /*\r\n            if (fullHeight) {\r\n            \tconsole.log(intersection);\r\n            }\r\n            */\r\n            if (intersection.y > 0) {\r\n                const y = intersection.center.y; // Math.min(1, Math.max(-1, intersection.center.y));\r\n                const s = (100 + parallax * 2) / 100;\r\n                currentY = ((-50) + (y * parallax * direction)).toFixed(3);\r\n                if (node.currentY !== currentY) {\r\n                    node.currentY = currentY;\r\n                    node.setAttribute('style', `height: ${s * 100}%; top: 50%; left: 50%; transform: translateX(-50%) translateY(${currentY}%);`);\r\n                }\r\n            }\r\n        });\r\n\r\n        // appears\r\n        this.appears.forEach((node, i) => {\r\n            let rect = Rect.fromNode(node);\r\n            const intersection = rect.intersection(this.windowRect);\r\n            if (intersection.y > 0.0) {\r\n                if (!node.to) {\r\n                    node.to = setTimeout(() => {\r\n                        node.classList.add('appeared');\r\n                    }, 150 * node.appearingIndex);\r\n                }\r\n            } else {\r\n                if (node.classList.contains('appeared')) {\r\n                    node.to = null;\r\n                    node.classList.remove('appeared');\r\n                }\r\n            }\r\n        });\r\n\r\n        LazyLoad.render(this.windowRect);\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.render();\r\n        if (this.playing) {\r\n            window.requestAnimationFrame(() => {\r\n                this.loop();\r\n            });\r\n        }\r\n    }\r\n\r\n    play() {\r\n        this.playing = true;\r\n        this.loop();\r\n    }\r\n\r\n    pause() {\r\n        this.playing = false;\r\n    }\r\n\r\n}\r\n\r\nvar app = new App();\r\n\r\nwindow.onload = () => {\r\n    app.init();\r\n    app.play();\r\n};"],"file":"docs\\js\\app.js"}