{"version":3,"names":[],"mappings":"","sources":["src/app/app.js"],"sourcesContent":["/* jshint esversion: 6 */\n/* global window, document, Swiper, TweenMax, TimelineMax */\n\nimport \"@babel/polyfill\";\nimport barba from '@barba/core';\nimport \"css-vars-ponyfill\";\nimport Anchors from './shared/anchors';\nimport Appears from './shared/appears';\nimport Dom from './shared/dom';\nimport Fancy from './shared/fancy';\nimport FancyDetail from './shared/fancy.detail';\nimport FancyViewAll from \"./shared/fancy.view-all\";\nimport Filters from './shared/filters';\nimport Grid from './shared/grid';\nimport LazyLoad from './shared/lazyload';\nimport Navigation from \"./shared/navigation\";\nimport Rect from './shared/rect';\nimport Samples from './shared/samples';\nimport SidePanel from './shared/side.panel';\nimport Sliders from './shared/sliders';\nimport ToggleSearch from './shared/toggle.search';\nimport CustomSelect from './shared/custom.select';\nimport Utils from './shared/utils';\nimport Follower from './shared/follower';\n\n//settings\nlet menuStyle = 1;\nlet scrollSpeed = 8;\nconst activateIntro = false;\nconst debug = true;\nconst disableBarba = false;\nconst barbaDebug = debug;\nconst enabledFollower = false;\n\nexport default class App {\n\n    constructor() {}\n\n    init() {\n        console.log('%c Coded by Websolute ', 'background: #01c0f6; color: #fff; border-radius: 20px; padding: 10px;');\n        const body = document.querySelector('body');\n        const page = document.querySelector('.page');\n        const header = document.querySelector('.header');\n        const smooth = 'cubic-bezier(0, 0.97, 0.43, 1)';\n        const links = [].slice.call(document.querySelectorAll('img'));\n        const follower = new Follower(document.querySelector('.follower'));\n\n\n        if (enabledFollower) {\n            body.classList.add('follower-enabled');\n        }\n        Dom.detect(body);\n        const mouse = {\n            x: 0,\n            y: 0\n        };\n        this.body = body;\n        this.page = page;\n        this.header = header;\n        this.smooth = smooth;\n        this.mouse = mouse;\n        this.follower = follower;\n        this.links = links;\n        this.appears = [];\n        this.parallaxes = [];\n        this.onResize();\n        this.addListeners();\n        this.transitions();\n\n\n        Element.prototype.scrollIntoView_ = Element.prototype.scrollIntoView;\n        Element.prototype.scrollIntoView = function () {\n            if (Dom.fastscroll) {\n                return this.scrollIntoView_.apply(this, arguments);\n            } else {\n                let rect = Rect.fromNode(this);\n                const scrollTop = Dom.scrollTop();\n                window.scrollTo(0, Math.max(0, scrollTop + rect.top - 120));\n            }\n        };\n        Navigation.init();\n        body.classList.add('ready');\n    }\n\n    transitions() {\n        const transitionLayer = document.querySelector('.transition');\n        const textFront = document.querySelector('.transition__text .box--front .text');\n        const textBack = document.querySelector('.transition__text .box--back .text');\n        const boxBack = document.querySelector('.transition__text .box--back');\n        const line = document.querySelector('.transition__line');\n\n        if (!disableBarba) {\n            barba.init({\n                timeout: 5000,\n                debug: barbaDebug,\n                transitions: [{\n                        name: 'default',\n                        appear(data) {\n                            const done = this.async();\n                            const transitionLayer = document.querySelector('.transition');\n                            const logoWrapper = document.querySelector('.transition .logo__wrapper');\n                            if (activateIntro) {\n                                let tl = new TimelineMax();\n                                const speed = 0.5;\n                                const transform = -10;\n                                tl.timeScale(0.9);\n\n                                const logo = [{\n                                        name: 'charM',\n                                        selector: document.querySelector('.logo__char-m'),\n                                        move: transform,\n                                        width: null,\n                                    },\n                                    {\n                                        name: 'charU',\n                                        selector: document.querySelector('.logo__char-u'),\n                                        move: transform,\n                                        width: null,\n                                    },\n                                    {\n                                        name: 'squarePrimary',\n                                        selector: document.querySelector('.logo__square-primary'),\n                                        width: document.querySelector('.logo__square-primary').width.baseVal.value,\n                                    },\n                                    {\n                                        name: 'charT',\n                                        selector: document.querySelector('.logo__char-t'),\n                                        move: transform,\n                                        width: null,\n                                    },\n                                    {\n                                        name: 'charI',\n                                        selector: document.querySelector('.logo__char-i'),\n                                        move: transform,\n                                        width: null,\n                                    },\n                                    {\n                                        name: 'squareSecondary',\n                                        selector: document.querySelector('.logo__square-secondary'),\n                                        move: transform,\n                                        width: document.querySelector('.logo__square-secondary').width.baseVal.value,\n                                    },\n                                    {\n                                        name: 'charN',\n                                        selector: document.querySelector('.logo__char-n'),\n                                        move: transform,\n                                        width: null,\n                                    },\n                                    {\n                                        name: 'groupA',\n                                        selector: document.querySelector('.logo__group-a'),\n                                        move: transform,\n                                        width: null,\n                                    }\n                                ];\n\n                                tl.set(transitionLayer, {\n                                    height: window.innerHeight + 2,\n                                });\n\n                                logo.forEach(item => {\n                                    if (item.name === 'squarePrimary' || item.name === 'squareSecondary') {\n                                        tl.set(item.selector, {\n                                            width: 0,\n                                            transform: 'translateX(' + item.move + 'px)',\n                                            opacity: 1\n                                        });\n                                    } else {\n                                        tl.set(item.selector, {\n                                            transform: 'translateX(' + item.move + 'px)',\n                                            opacity: 0\n                                        });\n                                    }\n                                });\n\n                                logo.forEach((item, index) => {\n                                    let delay = '-=0.4';\n                                    if (item.name === 'squarePrimary' || item.name === 'squareSecondary') {\n                                        tl.to(item.selector, speed, {\n                                            width: item.width,\n                                            transform: 'translateX(0px)',\n                                            opacity: 1,\n                                            ease: Expo.easeInOut\n                                        }, delay);\n                                    } else {\n                                        tl.to(item.selector, speed, {\n                                            transform: 'translateX(0px)',\n                                            opacity: 1,\n                                            ease: Expo.easeInOut,\n                                            onComplete: () => {\n                                                if (index === logo.length - 1) {\n                                                    console.log('pageinit');\n                                                    app.onPageInit();\n                                                }\n                                            }\n                                        }, delay);\n                                    }\n                                });\n\n                                tl.to(logoWrapper, 0.8, {\n                                    height: 0,\n                                    ease: Expo.easeInOut,\n                                }, '+=0.5');\n\n                                tl.to(transitionLayer, 1, {\n                                    height: 2,\n                                    top: app.header.clientHeight - 2,\n                                    bottom: 'auto',\n                                    ease: Expo.easeInOut,\n                                    onComplete: function () {\n                                        transitionLayer.style.height = 0;\n                                        transitionLayer.classList.add('transition--no-top-line');\n                                        done();\n                                    }\n                                }, '-=0.6');\n                            } else {\n                                app.onPageInit();\n                                TweenMax.set(transitionLayer, {\n                                    height: 0,\n                                    top: 0,\n                                    bottom: 'auto',\n                                });\n                                transitionLayer.classList.add('transition--no-top-line');\n                                done();\n                            }\n                        },\n                        /////////////////////////////////////////////\n                        leave(data) {\n                            const done = this.async();\n                            const title = data.trigger !== 'popstate' ? data.trigger.getAttribute('data-transition') : 'back';\n\n                            textFront.innerHTML = '';\n                            textBack.innerHTML = '';\n                            textFront.innerHTML = title;\n                            textBack.innerHTML = title;\n                            Navigation.closeNav();\n                            Navigation.closeSearch();\n                            TweenMax.set(transitionLayer, {\n                                backgroundColor: '#CFCFCF',\n                                width: window.innerWidth,\n                                bottom: 0,\n                                opacity: 1,\n                                top: 'auto',\n                                height: 0,\n                            });\n                            TweenMax.set(textFront, {\n                                transform: 'translateY(100%)',\n                                opacity: 1\n                            });\n                            TweenMax.set(textBack, {\n                                transform: 'translateY(0)',\n                            });\n                            TweenMax.set(boxBack, {\n                                width: 0,\n                            });\n                            TweenMax.set(line, {\n                                width: 0,\n                            });\n                            TweenMax.to(data.current.container, 1, {\n                                transform: 'translateY(-60px)',\n                                ease: Expo.easeInOut\n                            }).delay(0.3);\n                            TweenMax.to(transitionLayer, 1, {\n                                height: window.innerHeight,\n                                ease: Expo.easeInOut\n                            }).delay(0.3);\n                            TweenMax.to(textFront, 1, {\n                                transform: 'translateY(0)',\n                                ease: Expo.easeInOut,\n                            }).delay(0.4);\n                            TweenMax.to(line, 1, {\n                                width: '100%',\n                                ease: Expo.easeInOut,\n                            }).delay(1.2);\n                            TweenMax.to(boxBack, 1, {\n                                width: '100%',\n                                ease: Expo.easeInOut,\n                                onComplete: (e) => {\n                                    done();\n                                }\n                            }).delay(1.2);\n                        },\n                        afterLeave(data) {\n                            const done = this.async();\n                            app.destroyAll(data.current.container);\n                            done();\n                        },\n                        beforeEnter(data) {\n                            const done = this.async();\n                            app.onPageInit();\n                            /*\n                            window.daraLayer.push({\n\n                            })\n                            gtm.push({\n                                title: document.title,\n                                href: window.href\n                            })\n                            */\n                            done();\n                        },\n                        enter(data) {\n                            const done = this.async();\n                            const header = document.querySelector('header');\n                            window.scrollTo(0, 0);\n                            header.style.top = 0;\n                            TweenMax.to(textBack, 1, {\n                                transform: 'translateY(-100%)',\n                                ease: Expo.easeInOut,\n                            }).delay(0.1);\n                            TweenMax.to(textFront, 1, {\n                                transform: 'translateY(-100%)',\n                                ease: Expo.easeInOut,\n                            }).delay(0.1);\n                            TweenMax.to(transitionLayer, 1, {\n                                height: 0,\n                                top: 0,\n                                bottom: 'auto',\n                                ease: Expo.easeInOut,\n                                onComplete: (e) => {\n                                    done();\n                                }\n                            }).delay(0.3);\n                        },\n                        ////////////////////////////////////////////////////\n                    },\n                    {\n                        name: 'fast-transition',\n                        from: {\n                            custom: ({\n                                trigger\n                            }) => {\n                                return trigger.classList && trigger.classList.contains('fast-transition');\n                            },\n                        },\n                        leave(data) {\n                            const done = this.async();\n                            done();\n                        },\n                        afterLeave(data) {\n                            const done = this.async();\n                            app.destroyAll(data.current.container);\n                            done();\n                        },\n                        beforeEnter(data) {\n                            const done = this.async();\n                            app.onPageInit();\n                            done();\n                        },\n                        enter(data) {\n                            const done = this.async();\n                            done();\n                        },\n                    },\n                    {\n                        name: 'fancy-in-transition',\n                        from: {\n                            custom: ({\n                                trigger\n                            }) => {\n                                return trigger.classList && trigger.classList.contains('fancy-in-transition');\n                            },\n                        },\n                        leave(data) {\n                            const done = this.async();\n                            Navigation.closeNav();\n                            Navigation.closeSearch();\n                            TweenMax.set(line, {\n                                width: 0,\n                            });\n                            TweenMax.set(transitionLayer, {\n                                backgroundColor: '#CFCFCF',\n                                bottom: 0,\n                                opacity: 1,\n                                top: 'auto',\n                                height: 0,\n                            });\n                            TweenMax.to(data.current.container, 1, {\n                                transform: 'translateY(-60px)',\n                                ease: Expo.easeInOut\n                            });\n                            TweenMax.to(transitionLayer, 1, {\n                                height: window.innerHeight,\n                                ease: Expo.easeInOut,\n                            });\n                            TweenMax.to(transitionLayer, 0.8, {\n                                backgroundColor: '#ffffff',\n                                ease: Power1.easeOut,\n                                onComplete: (e) => {\n                                    done();\n                                }\n                            }).delay(0.4);\n                        },\n                        afterLeave(data) {\n                            const done = this.async();\n                            app.destroyAll(data.current.container);\n                            done();\n                        },\n                        beforeEnter(data) {\n                            const done = this.async();\n                            app.onPageInit();\n                            done();\n                        },\n                        enter(data) {\n                            const done = this.async();\n                            const sidebar = document.querySelector('.fancy-detail__sidebar')\n                            window.scrollTo(0, 0);\n                            TweenMax.set(sidebar, {\n                                left: -sidebar.clientWidth\n                            });\n                            TweenMax.to(transitionLayer, 1, {\n                                opacity: 0,\n                                ease: Expo.easeInOut,\n                            });\n                            TweenMax.to(sidebar, 1.5, {\n                                left: 0,\n                                ease: Expo.easeInOut,\n                                onComplete: (e) => {\n                                    done();\n                                }\n                            });\n                        },\n                    },\n                    {\n                        name: 'fancy-out-transition',\n                        from: {\n                            custom: ({\n                                trigger\n                            }) => {\n                                return trigger.classList && trigger.classList.contains('fancy-out-transition');\n                            },\n                        },\n                        leave(data) {\n                            const done = this.async();\n                            const sidebar = document.querySelector('.fancy-detail__sidebar');\n                            const panel = document.querySelector('.fancy-detail__panel');\n                            if (window.innerWidth > 768) {\n                                TweenMax.to(sidebar, 1, {\n                                    left: -sidebar.clientWidth - 10,\n                                    ease: Expo.easeInOut,\n                                });\n                            } else {\n                                TweenMax.to(sidebar, 1, {\n                                    opacity: 0,\n                                    transform: 'translateY(60px)',\n                                    ease: Expo.easeInOut,\n                                });\n                                TweenMax.to(panel, 1, {\n                                    bottom: -panel.clientHeight,\n                                    ease: Expo.easeInOut,\n                                });\n                            }\n\n                            TweenMax.to(data.current.container, 1, {\n                                opacity: 0,\n                                transform: 'translateY(100px)',\n                                ease: Expo.easeInOut,\n                                onComplete: (e) => {\n                                    done();\n                                }\n                            });\n                        },\n                        afterLeave(data) {\n                            const done = this.async();\n                            TweenMax.set(transitionLayer, {\n                                top: 'auto',\n                                bottom: 0,\n                                height: window.innerHeight,\n                                backgroundColor: '#ffffff',\n                                opacity: 1,\n                            });\n                            app.destroyAll(data.current.container);\n                            done();\n                        },\n                        beforeEnter(data) {\n                            const done = this.async();\n                            app.onPageInit();\n                            done();\n                        },\n                        enter(data) {\n                            const done = this.async();\n                            const header = document.querySelector('header');\n                            window.scrollTo(0, 0);\n                            header.style.top = 0;\n                            TweenMax.to(transitionLayer, 1, {\n                                height: 0,\n                                backgroundColor: '#CFCFCF',\n                                ease: Expo.easeInOut,\n                                onComplete: (e) => {\n                                    done();\n                                }\n                            });\n                        },\n                    }\n                ],\n            });\n        } else {\n            const transition = document.querySelector('.transition');\n            transition.remove();\n            this.onPageInit();\n        }\n    }\n\n    onPageInit() {\n        this.parallaxes = [].slice.call(document.querySelectorAll('[data-parallax]'));\n        LazyLoad.init();\n        Fancy.init();\n        FancyViewAll.init();\n        FancyDetail.init();\n        Sliders.init();\n        Anchors.init(document.querySelector('.anchors__wrapper'), 200);\n        Samples.init();\n        Utils.toggleGrid();\n        Filters.init();\n        ToggleSearch.init(debug);\n        Grid.init(debug);\n        SidePanel.init(debug);\n        CustomSelect.init(debug);\n\n        setTimeout(x => {\n            this.appears = Appears.init();\n            if (window.innerWidth > 768) {\n                Splitting();\n            }\n        }, 600);\n    }\n\n    destroyAll(container) {\n        Anchors.destroyAll();\n        Sliders.destroyAll();\n        Fancy.destroyAll();\n        Samples.destroyAll();\n        FancyViewAll.destroyAll();\n        FancyDetail.destroyAll();\n        Filters.destroyAll();\n        ToggleSearch.destroyAll();\n        Grid.destroyAll();\n        SidePanel.destroyAll();\n        CustomSelect.destroyAll();\n        container.remove();\n    }\n\n    addListeners() {\n        window.addEventListener('resize', () => {\n            this.onResize();\n        });\n\n        window.addEventListener('scroll', Utils.throttle(() => {\n            this.onScroll();\n        }, 1000 / 25));\n\n        window.addEventListener('wheel', (e) => {\n            this.onWheel(e);\n        });\n\n        window.addEventListener('mousemove', (e) => {\n            this.onMouseMove(e);\n        });\n    }\n\n    onMouseMove(e) {\n        this.mouse.x = e.clientX / window.innerWidth - 0.5;\n        this.mouse.y = e.clientY / window.innerHeight - 0.5;\n\n        this.follower.follow(this.links.map(x => Rect.fromNode(x)));\n        this.follower.move({\n            x: e.clientX,\n            y: e.clientY\n        });\n        //console.log('moving', e.clientX, e.clientY);\n    }\n\n    onResize() {\n        this.windowRect = new Rect({\n            top: 0,\n            left: 0,\n            width: window.innerWidth,\n            height: window.innerHeight,\n        });\n        Navigation.closeNav();\n        Navigation.closeSearch();\n    }\n\n    onScroll(e) {\n        const scrollTop = Dom.scrollTop();\n        const anchorPanel = document.querySelector('.anchors');\n        const filterPanel = document.querySelector('.filters');\n\n        Navigation.closeNav();\n        Navigation.closeSearch();\n\n        // fastscroll mobile\n        if (Dom.fastscroll) {\n            const newTop = Math.round(scrollTop * 10) / 5;\n            if (this.page.previousTop !== newTop) {\n                this.page.previousTop = newTop;\n                Dom.scrolling = true;\n                if (newTop > this.page.previousTop) {\n                    this.body.classList.add('scroll-up');\n                    this.body.classList.remove('scroll-down');\n                } else {\n                    this.body.classList.remove('scroll-up');\n                    this.body.classList.add('scroll-down');\n                }\n            } else {\n                Dom.scrolling = false;\n            }\n        }\n\n        //header animation\n        if (this.header && scrollTop > 300 && !this.body.classList.contains('nav-mobile-open')) {\n            this.header.style.top = -this.header.clientHeight + 'px';\n            this.header.style.transition = 'top .15s linear';\n\n            if (anchorPanel) {\n                anchorPanel.style.top = -anchorPanel.clientHeight + 'px';\n                anchorPanel.style.transition = 'top .15s linear';\n            }\n\n            if (this.body.classList.contains('scroll-down')) {\n                this.header.style.top = 0;\n                if (anchorPanel) {\n                    anchorPanel.style.top = -anchorPanel.clientHeight + 'px';\n                }\n            } else {\n                this.header.style.top = -this.header.clientHeight + 'px';\n                if (anchorPanel) {\n                    anchorPanel.style.top = 0;\n                }\n            }\n        }\n    }\n\n    onWheel(e) {\n        if (e.deltaY > 0) {\n            this.body.classList.add('scroll-up');\n            this.body.classList.remove('scroll-down');\n        } else {\n            this.body.classList.remove('scroll-up');\n            this.body.classList.add('scroll-down');\n        }\n    }\n\n    render() {\n\n        // smoothscroll desktop\n        // if (!Dom.overscroll && !Dom.touch) {\n        if (!Dom.fastscroll) {\n            if (this.body.offsetHeight !== this.page.offsetHeight) {\n                this.body.setAttribute('style', `height: ${this.page.offsetHeight}px;`);\n                /*\n                TweenMax.set(this.body, {\n                \theight: this.page.offsetHeight,\n                });\n                */\n            }\n            const scrollTop = Dom.scrollTop();\n            let newTop = this.page.previousTop || 0;\n            newTop += (scrollTop - newTop) / scrollSpeed;\n            if (Math.abs(scrollTop - newTop) < 0.15) {\n                newTop = scrollTop;\n            }\n            if (newTop !== undefined && !Number.isNaN(newTop) && this.page.previousTop !== newTop) {\n                this.page.previousTop = newTop;\n                // this.page.setAttribute('style', `top: ${-newTop}px;`);\n                this.page.setAttribute('style', `transform: translateY(${-newTop}px);`);\n                /*\n                TweenMax.set(this.page, {\n                \ty: -newTop,\n                });\n                */\n                Dom.scrolling = true;\n            } else {\n                Dom.scrolling = false;\n            }\n        } else if (this.body.hasAttribute('style')) {\n            this.body.removeAttribute('style');\n            this.page.removeAttribute('style');\n        }\n\n        //parallax\n        this.parallaxes.forEach((node, i) => {\n            const parallax = node.parallax || (node.parallax = parseInt(node.getAttribute('data-parallax')) || 5) * 3;\n            const direction = i % 2 === 0 ? 1 : -1;\n            let currentY = node.currentY || 0;\n            let rect = Rect.fromNode(node);\n            rect = new Rect({\n                top: rect.top,\n                left: rect.left,\n                width: rect.width,\n                height: rect.height,\n            });\n            const intersection = rect.intersection(this.windowRect);\n            /*\n            if (fullHeight) {\n            \tconsole.log(intersection);\n            }\n            */\n            if (intersection.y > 0) {\n                const y = intersection.center.y; // Math.min(1, Math.max(-1, intersection.center.y));\n                const s = (100 + parallax * 2) / 100;\n                currentY = ((-50) + (y * parallax * direction)).toFixed(3);\n                if (node.currentY !== currentY) {\n                    node.currentY = currentY;\n                    node.setAttribute('style', `height: ${s * 100}%; top: 50%; left: 50%; transform: translateX(-50%) translateY(${currentY}%);`);\n                }\n            }\n        });\n\n        // appears\n        this.appears.forEach((node, i) => {\n            let rect = Rect.fromNode(node);\n            const intersection = rect.intersection(this.windowRect);\n            if (intersection.y > 0.0) {\n                if (!node.to) {\n                    node.to = setTimeout(() => {\n                        node.classList.add('appeared');\n                    }, 150 * node.appearingIndex);\n                }\n            } else {\n                // if (node.classList.contains('appeared')) {\n                //     node.to = null;\n                //     node.classList.remove('appeared');\n                // }\n            }\n        });\n\n        LazyLoad.render(this.windowRect);\n\n        if (!Dom.mobile) {\n\n            // follower\n            if (this.enabledFollower) {\n                this.follower.render();\n            }\n        }\n\n    }\n\n    loop() {\n        this.render();\n        if (this.playing) {\n            window.requestAnimationFrame(() => {\n                this.loop();\n            });\n        }\n    }\n\n    play() {\n        this.playing = true;\n        this.loop();\n    }\n\n    pause() {\n        this.playing = false;\n    }\n\n}\n\nvar app = new App();\n\nwindow.onload = () => {\n    app.init();\n    app.play();\n};"],"file":"docs/js/app.js"}